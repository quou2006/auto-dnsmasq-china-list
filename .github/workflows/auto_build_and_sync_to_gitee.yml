name: GitHub Actions Build dnsmasq-china-list-smartdns
on:
  workflow_dispatch:
  schedule:
    - cron: "0 22 * * *"
  push:
    branches:
      - master
#  watch:
#    types: [started]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout
      uses: actions/checkout@master
  
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install curl git wget
    - name: Clone source code
      run: |
        git clone --depth=1 https://github.com/felixonmars/dnsmasq-china-list.git
        cd dnsmasq-china-list
        make raw
        mkdir -p /tmp/upload/
        cp ./accelerated-domains.china.raw.txt /tmp/upload/
        #合并
        cat ./google.china.raw.txt >> /tmp/upload/accelerated-domains.china.raw.txt 2>/dev/null
        cat ./apple.china.raw.txt >> /tmp/upload/accelerated-domains.china.raw.txt 2>/dev/null
        
        
    - name: Set variables
      run: |
        echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        
#    - name: Release and upload assets
#      uses: softprops/action-gh-release@v0.1.6
#      with:
#        name: ${{ env.RELEASE_NAME }}
#        tag_name: ${{ env.TAG_NAME }}
#        draft: false
#        prerelease: false
#        files: |
#            /tmp/upload/accelerated-domains.china.raw.txt
#      env:
#        GITHUB_TOKEN: ${{ secrets.MYTOKEN }}  
       
    - name: Git push assets to "release" branch
      run: |
         cd /tmp/upload/ || exit 1
         git init
         git config --local user.name "github-actions[bot]"
         git config --local user.email "github-actions[bot]@users.noreply.github.com"
         git checkout -b release
         git add .
         git commit -m "${{ env.RELEASE_NAME }}"
         git remote add origin "https://${{ github.actor }}:${{ secrets.MYTOKEN }}@github.com/${{ github.repository }}"
         git push -f -u origin release
      
    - name: Purge jsdelivr CDN
      run: |
        cd /tmp/upload/ || exit 1
        for file in $(ls); do
          curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
        done
    - name: Gitee Pages Action
      # You may pin to the exact commit or the version.
      # uses: yanglbme/gitee-pages-action@e358fbd0c2eb1dcb7194af62818814b2a5d105b4
      uses: yanglbme/gitee-pages-action@v1.4.1
      with:
        # The Gitee username, like yanglbme
        gitee-username: ${{ secrets.GITEE_USERNAME }}
        # The Gitee password
        gitee-password: ${{ secrets.GITEE_PASSWORD }}
        # The Gitee repository, like doocs/leetcode
        gitee-repo: quou2006/auto-dnsmasq-china-list
        # Which branch to build
        branch: release # optional, default is master
        # Which directory to build
        #directory: # optional, default is 
        # Use force https or not
        #https: # optional, default is true
